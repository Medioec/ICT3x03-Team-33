# Nginx configuration for both HTTP and SSL

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Defining rate limiting zone 
limit_req_zone $binary_remote_addr zone=one:10m rate=30r/m;

server {
    listen 80 default_server;
    server_name defaultXD;

    return 418;
}

server {
    listen 443 ssl;
    server_name defaultXD;

    ssl_certificate /etc/letsencrypt/live/${BASE_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${BASE_HOST}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_verify_client off;

    return 418;
}

server {
    listen 80;

    server_name ${BASE_HOST};

    location /health {
        set $upstream http://127.0.0.1:5000/health$is_args$args;
        include includes/proxy_backend.conf;
    }

    location / {
        client_max_body_size 0;

        set $upstream https://frontend;
        set $always_redirect on;

        if ($always_redirect = on) {
            return 301 https://$host$request_uri:${HTTPS_PORT};
        }

        include includes/proxy_backend.conf;

        index index.html index.htm;
        root /usr/share/nginx/html;
    }

    # Apply rate limiting to /login.html
    location /login.html {
        client_max_body_size 0;

        include includes/proxy_backend.conf;
	index login.html login.htm;
	root /usr/share/nginx/html;
	limit_req zone=one;
    }

    # Apply rate limiting to /register.html
    location /register.html {
	client_max_body_size 0;

        include includes/proxy_backend.conf;
	index register.html register.htm;
	root /usr/share/nginx/html;
	limit_req zone=one;

    }

    include includes/location_common.conf;

}

server {
    listen 443 ssl;

    server_name ${BASE_HOST};
    set $upstream https://frontend;

    ssl_certificate /etc/letsencrypt/live/${BASE_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${BASE_HOST}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_verify_client off;

    location / {
        client_max_body_size 0;

        include includes/proxy_backend.conf;

        index index.html index.htm;
        root /usr/share/nginx/html;
    }

    # Apply rate limiting to /login.html
    location /login.html {
        client_max_body_size 0;

        include includes/proxy_backend.conf;
	index login.html login.htm;
	root /usr/share/nginx/html;
	limit_req zone=one;
    }

    # Apply rate limiting to /register.html
    location /register.html {
	client_max_body_size 0;

        include includes/proxy_backend.conf;
	index register.html register.htm;
	root /usr/share/nginx/html;
	limit_req zone=one;

    }

    include includes/location_common.conf;
}
