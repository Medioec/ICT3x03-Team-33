pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                // Retrieve the code from your version control system
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Install any dependencies required for your project
                script {
                    // Assuming you're using a virtual environment
                    sh 'python -m venv venv'
                    sh '. venv/bin/activate'
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    // Run your unit tests
                    sh '. venv/bin/activate'
                    sh 'python -m unittest discover'
                }
            }
        }
    }
    
    post {
        always {
            // Actions to perform after the pipeline has run, regardless of the result
            // Example: clean up resources, send notifications, etc.
            cleanWs() // clean up workspace
        }
        
        success {
            // Actions to perform if the pipeline is successful
            // Example: deploy the application, send a success notification, etc.
            echo 'Pipeline succeeded!'
            // you can add more steps for deployment or other actions
        }
        
        failure {
            // Actions to perform if the pipeline fails
            // Example: send a failure notification, perform rollback, etc.
            echo 'Pipeline failed!'
            // you can add more steps for sending notifications or other actions
        }
        
        unstable {
            // Actions to perform if the pipeline is unstable
            // Example: send a notification, mark the build as unstable, etc.
            echo 'Pipeline is unstable!'
            // you can add more steps for sending notifications or other actions
        }
        
        aborted {
            // Actions to perform if the pipeline is aborted
            // Example: send a notification, clean up resources, etc.
            echo 'Pipeline was aborted!'
            // you can add more steps for sending notifications or other actions
        }
    }
}
